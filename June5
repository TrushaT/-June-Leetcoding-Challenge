''' in this problem w is list of numbers . We have to randomly pick a index proportional to weight .
explaination of a given test case :
w : [1,3]
make another list : [1,4]
when a number is generated randomly between 1 to 4
we check for its index in nums 
eg if no is 2 which is less than 4 therefore index returned is 1  this basically shows probability of that index bbeing chosen 
higher weight , more chance of that index being chosen'''

from random import randrange
class Solution:

    def __init__(self, w: List[int]):
        #print(w)
        self.nums = [w[0]]
        #print(self.nums)
        n = len(w)
        for i  in range(1,n):
            #print(w[i])
            self.nums.append(self.nums[-1] + w[i])
        #print(self.nums)
        

    def pickIndex(self) -> int:
        val = random.randrange(1,self.nums[-1]+1)
        return self.getPos(val)
     
    def getPos(self,val):
        l = 0
        h = len(self.nums) - 1
        
        while l < h:
            mid = (l+h-1)//2
            if self.nums[mid] < val:
                l = mid + 1
            else :
                h = mid
        return l
        


